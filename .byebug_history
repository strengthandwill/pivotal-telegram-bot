continue
status
continue
status
params[:status]
params[:status
params
 params[:status]
status
continue
a
a = eval json[:execution][:actionExecutions]
eval json[:execution][:actionExecutions]
json[:execution][:actionExecutions]
JSON.parse(json[:execution][:actionExecutions])
json[:execution][:actionExecutions]
json[:execution][:pipeline][:actionExecutions]
puts json.to_hash.to_json
json.to_hash.to_json
json.to_hash
execution_status = json[:execution][:pipeline][:last_execution_status]
puts json
json
exit
json[:execution][:pipeline][:last_execution_status]
json[:execution][:actionExecutions]
json[:execution][:actionExecutions][5]
json[:execution][:actionExecutions][4]
json[:execution][:actionExecutions][3]
json[:execution][:actionExecutions][2]
json[:execution][:actionExecutions][1]
json[:execution][:actionExecutions][0]
json[:execution][:actionExecutions]
json[:execution]
json[:execution][:actionExecutions]
json[:execution][:actionExecutions].second
json[:execution][:actionExecutions].first
json[:execution][:actionExecutions][0]
json[:execution][:actionExecutions].count
json[:execution][:actionExecutions]
json[:execution]
json[:pipeline]
json['actionExecutions']
json[:actionExecutions]
actionExecutions
json
json[:execution][:pipeline]
json[:execution]
json
continue
json[:execution][:url]
json
json[:execution][:branch][:url]
json[:execution][:to_revision][:url]
continue
json[:execution][:to_revision][:message]
json[:execution][:to_revision]
json
json[:execution][:creator][:name]
json[:execution][:creator]
json[:execution][:branch][:name]
json[:execution][:branch]
puts json.to_json
puts json
puts JSON.parse(json)
puts json
json[:branch]
json[:project]
json
json[:branch]
json[:creator]
json[:execution][:status]
json[:execution]
json[:execution][:mode]
json[:execution][:url]
json[:execution]
json[:project][:display_name]
json[:project][:name]
json[:project]
json[:execution]
json[:execution][:status]
json[:execution]
json[:project]
json[:workspace]
json[:workspace=]
json
continue
json[:changes][0][:new_values][:description]
json[:changes][0][:new_values]
json[:changes][0]
json[:changes][:new_values]
json[:changes][::new_values]
json[:changes]
json[:changes][:new_values]
json[:changes][:new_values][:description]
json[:changes][:description]
json[:changes]
json[:change]
json[:message]
json[:project]e
a = json[:message][a..-1]
a = json[:message].index('"')
json[:message].index('"')
json[:message].index('\"')
json[:message].index('o')
json[:message].index('\"')
json[:message]
json[:message].index('\"')
json[:message].index('\')
json[:message]
exit
json[:message]
json
json[:performed_by]
json[:highlight].tr(':', '')
primary_resource
json[:primary_resources]
c
json[:project]
who_did_it
exit
message
exit
request['changes'].first['name']
request['changes']
request['changes'].first['name']
request['changes'].first.name
request['changes'].first
request['changes'].count
request['changes']
request
json = JSON.parse(request)
request['occurred_at']
request.body.occurred_at
request.body.count
request.body
request.body['occurred_at']
request.body
